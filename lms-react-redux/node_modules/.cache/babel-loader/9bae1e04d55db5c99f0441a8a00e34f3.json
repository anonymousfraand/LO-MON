{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\SubmissionComponent.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nclass SubmissionComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date_submitted: '',\n      grade_assigned: 0,\n      // assignment_id: this.props.assignmentObject.id,\n      // assignment_id: '',\n      student_id: this.props.currentUser.id\n    };\n\n    this.handleSubmissionSubmit = e => {\n      e.preventDefault();\n      const token = localStorage.getItem(\"token\"); // console.log(this.props.history.location.pathname)\n      // this.props.addAssignment(this.state)\n\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/submissions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          submission: _objectSpread({}, this.state, {\n            assignment_id: this.props.assignmentObject.id\n          })\n        })\n      }).then(resp => resp.json()).then(data => {\n        //  console.log(data)  \n        this.props.history.push('/courses');\n      }); // this.props.setSubmission(this.state) \n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const problems = this.props.assignmentObject.problems; // console.log(this.props.history)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmissionSubmit,\n      className: \"ui tiny form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, problems.map(problem => {\n      return React.createElement(\"div\", {\n        className: \"ui segment\",\n        key: problem.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Question: \", problem.question), React.createElement(\"textarea\", {\n        onChange: this.handleOnChange,\n        required: true,\n        name: \"answer\".concat(problems.indexOf(problem) + 1),\n        placeholder: \"Solution\",\n        rows: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Assignment\",\n      className: \"ui submit button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n} // function mapDispatchToProps(dispatch){\n//     return {\n//         setSubmission: (submissionObj)=> {\n//             dispatch({type: \"SUBMIT_ASSIGNMENT_TO_COURSE\", payload: submissionObj})\n//         }\n//     }\n// }\n\n\nexport default withRouter(SubmissionComponent);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\SubmissionComponent.js"],"names":["React","Component","withRouter","SubmissionComponent","state","date_submitted","grade_assigned","student_id","props","currentUser","id","handleSubmissionSubmit","e","preventDefault","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","submission","assignment_id","assignmentObject","then","resp","json","data","history","push","handleOnChange","setState","target","name","value","render","problems","map","problem","question","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {withRouter} from 'react-router'\n\nclass SubmissionComponent extends Component {\n    state = {\n        date_submitted: '',\n        grade_assigned: 0,\n        // assignment_id: this.props.assignmentObject.id,\n        // assignment_id: '',\n        student_id: this.props.currentUser.id,\n        \n    }\n    handleSubmissionSubmit = (e) => {\n        e.preventDefault()\n        const token = localStorage.getItem(\"token\")\n            // console.log(this.props.history.location.pathname)\n            // this.props.addAssignment(this.state)\n            fetch(`https://lms-api-rails.herokuapp.com/api/v1/submissions`,{\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    submission: {...this.state, assignment_id: this.props.assignmentObject.id}\n                })\n            })\n            .then(resp => resp.json())\n            .then(data => {            \n            //  console.log(data)  \n            this.props.history.push('/courses')\n            })\n            // this.props.setSubmission(this.state) \n    }\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        const {problems} = this.props.assignmentObject\n        // console.log(this.props.history)\n        return (\n            <div>\n                <form onSubmit={this.handleSubmissionSubmit} className=\"ui tiny form\">\n                        <div className=\"field\">\n                            {/* <label>Information</label> */}\n                            {problems.map(problem => {\n                                return <div className=\"ui segment\" key={problem.id}>\n                                    <h2>Question: {problem.question}</h2>\n                                    \n                                    <textarea onChange={this.handleOnChange} required name={`answer${problems.indexOf(problem) + 1}`} placeholder=\"Solution\" rows=\"2\"></textarea>\n                                </div>\n                            })}   \n                        </div>\n                        <input type=\"submit\" value=\"Submit Assignment\" className=\"ui submit button\"></input>\n                    </form>\n            </div>\n        )\n    }\n}\n\n// function mapDispatchToProps(dispatch){\n//     return {\n//         setSubmission: (submissionObj)=> {\n//             dispatch({type: \"SUBMIT_ASSIGNMENT_TO_COURSE\", payload: submissionObj})\n//         }\n//     }\n// }\n\nexport default withRouter(SubmissionComponent)"]},"metadata":{},"sourceType":"module"}