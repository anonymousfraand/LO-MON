{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\ProfileComponent.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Bar, Polar } from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nimport { Animated } from 'react-animated-css';\n\nclass ProfileComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: {},\n      mathAverage: 0,\n      scienceAverage: 0,\n      literatureAverage: 0,\n      historyAverage: 0,\n      technologyAverage: 0,\n      currentStudent: {},\n      graphView: ''\n    };\n\n    this.handleGraphView = graphName => {\n      let Scroll = require('react-scroll');\n\n      let scroll = Scroll.animateScroll;\n      this.setState({\n        graphView: graphName\n      });\n      scroll.scrollToBottom();\n    };\n\n    this.componentDidMount = () => {\n      const token = localStorage.getItem(\"token\");\n      const urlSplit = this.props.history.location.pathname.split(\"/\");\n      const url = urlSplit[3];\n      const path = urlSplit[2]; // checks where to fetch. either student or teacher path\n\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/\".concat(path, \"s/\").concat(url, \"/\").concat(path, \"_grades\"), {\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        // this.gradeSorter(data)\n        // this.getChartData();\n        // this.setState({\n        //     currentStudent: data.student\n        // })\n        if (path === \"teacher\") {\n          // console.log(data) //data presents teacher courses with course averages\n          this.getChartDataTeacher(data);\n        } else {\n          this.getChartData(data.math, data.science, data.literature, data.history, data.technology);\n        } // this.setState({\n        //     mathAverage: data.math,\n        //     scienceAverage: data.science,\n        //     literatureAverage: data.literature,\n        //     historyAverage: data.history,\n        //     technologyAverage: data.technology\n        // })\n\n      }); // this.getChartData(data.math, data.science, data.literature, data.history, data.technology);   \n    };\n  }\n\n  getChartDataTeacher(courses) {\n    let labelsTeacher = courses.map(course => {\n      return course.name;\n    });\n    let dataTeacher = courses.map(course => {\n      return course.grades;\n    });\n    this.setState({\n      chartData: {\n        labels: labelsTeacher,\n        datasets: [{\n          label: 'Population',\n          data: dataTeacher,\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n        }]\n      }\n    });\n  }\n\n  getChartData(math, science, literature, history, technology) {\n    this.setState({\n      chartData: {\n        labels: ['Math', 'Science', 'Literature', 'History', 'Technology'],\n        datasets: [{\n          label: 'Population',\n          data: [// this.state.mathAverage,\n          // this.state.scienceAverage,\n          // this.state.literatureAverage,\n          // this.state.historyAverage,\n          // this.state.technologyAverage\n          math, science, literature, history, technology],\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n        }]\n      }\n    });\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: \"10px\",\n        height: '80vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Profile\"), Object.keys(this.props.currentUser).length !== 0 ? React.createElement(Animated, {\n      animationIn: \"fadeInLeft\",\n      animationInDuration: 2000,\n      animationOut: \"fadeOut\",\n      isVisible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui centered card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.currentUser.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.props.currentUser.first_name, \" \", this.props.currentUser.last_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.props.currentUser.bio)))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Loading\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"View Report Classifications\"), React.createElement(\"div\", {\n      className: \"ui large buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui grey button\",\n      onClick: () => this.handleGraphView(\"Polar\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Polar Graph View\"), React.createElement(\"div\", {\n      className: \"or\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui black button\",\n      onClick: () => this.handleGraphView(\"Bar\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Bar Graph View\")), this.state.graphView ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.graphView === \"Bar\" ? React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: 'Classification R',\n          fontSize: 25\n        },\n        legend: {\n          display: false,\n          position: 'bottom'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }) : React.createElement(Polar, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: 'hello',\n          text: 'Polar Chart Average Grades',\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\ProfileComponent.js"],"names":["React","Component","Fragment","Bar","Polar","connect","Animated","ProfileComponent","state","chartData","mathAverage","scienceAverage","literatureAverage","historyAverage","technologyAverage","currentStudent","graphView","handleGraphView","graphName","Scroll","require","scroll","animateScroll","setState","scrollToBottom","componentDidMount","token","localStorage","getItem","urlSplit","props","history","location","pathname","split","url","path","fetch","headers","then","resp","json","data","getChartDataTeacher","getChartData","math","science","literature","technology","courses","labelsTeacher","map","course","name","dataTeacher","grades","labels","datasets","label","backgroundColor","render","marginTop","height","Object","keys","currentUser","length","image_url","first_name","last_name","bio","title","display","text","fontSize","legend","position","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component,Fragment } from 'react'\nimport { Bar,Polar } from 'react-chartjs-2';\nimport {connect} from 'react-redux'\nimport {Animated} from 'react-animated-css'\n\nclass ProfileComponent extends Component {\n    state = {\n        chartData: {},\n        mathAverage: 0,\n        scienceAverage: 0,\n        literatureAverage: 0,\n        historyAverage: 0,\n        technologyAverage: 0,\n        currentStudent: {},\n        graphView: ''\n    }\n\n    getChartDataTeacher(courses){\n        let labelsTeacher = courses.map(course => {\n            return course.name\n        })\n\n        let dataTeacher = courses.map(course => {\n            return course.grades\n        })\n        this.setState({\n            chartData:{\n              labels: labelsTeacher,\n              datasets:[\n                {\n                  label:'Population',\n                  data: dataTeacher,\n                  backgroundColor:[\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(153, 102, 255, 0.6)',\n                    'rgba(255, 159, 64, 0.6)',\n                    'rgba(255, 99, 132, 0.6)'\n                  ]\n                }\n              ]\n            }\n          });\n    }\n    getChartData(math, science, literature, history, technology){\n        this.setState({\n          chartData:{\n            labels: ['Math', 'Science', 'Literature', 'History', 'Technology'],\n            datasets:[\n              {\n                label:'Population',\n                data:[\n                    // this.state.mathAverage,\n                    // this.state.scienceAverage,\n                    // this.state.literatureAverage,\n                    // this.state.historyAverage,\n                    // this.state.technologyAverage\n                    math,\n                    science,\n                    literature,\n                    history,\n                    technology\n                ],\n                backgroundColor:[\n                  'rgba(255, 99, 132, 0.6)',\n                  'rgba(54, 162, 235, 0.6)',\n                  'rgba(255, 206, 86, 0.6)',\n                  'rgba(75, 192, 192, 0.6)',\n                  'rgba(153, 102, 255, 0.6)',\n                  'rgba(255, 159, 64, 0.6)',\n                  'rgba(255, 99, 132, 0.6)'\n                ]\n              }\n            ]\n          }\n        });\n      }\n\n      handleGraphView = (graphName) => {\n        let Scroll = require('react-scroll')\n        let scroll = Scroll.animateScroll;\n\n        this.setState({\n            graphView: graphName\n        })\n        scroll.scrollToBottom()\n      }\n\n    //   averageCalculator = (scoresArray) => {\n    //     let totalScore = 0;\n    //     scoresArray.map(score => {\n    //         totalScore += score.grade_assigned\n    //     })\n    //     if(scoresArray.length !== 0){\n    //         return totalScore / scoresArray.length\n    //     }\n    //     else{\n    //         return 0\n    //     }\n        \n    //   }\n\n    //   gradeSorter = (gradeData) => {\n        // console.log(gradeData)\n\n        // let mathScores = [];\n        // let scienceScores = [];\n        // let literatureScores = [];\n        // let historyScores = [];\n        // let technologyScores = [];\n\n        // gradeData.grades.map(grade => {\n        //     switch(grade.subject){\n        //         case \"Math\":\n        //             mathScores = [...mathScores, grade]\n        //         break;\n        //         case \"Science\":\n        //             scienceScores = [...scienceScores, grade]\n        //         break;\n        //         case \"Literature\":\n        //             literatureScores = [...literatureScores, grade]\n        //         break;\n        //         case \"History\":\n        //             historyScores = [...historyScores, grade]\n        //         break;\n        //         case \"Technology\":\n        //             technologyScores = [...technologyScores, grade]\n        //         break;\n        //         default: return null\n        //     }\n        // })\n        // console.log(this.averageCalculator(mathScores))\n        // console.log(literatureAverage)\n        // console.log(scienceAverage)\n        // this.setState({\n        //     mathAverage: this.averageCalculator(mathScores),\n        //     scienceAverage: this.averageCalculator(scienceScores),\n        //     literatureAverage: this.averageCalculator(literatureScores),\n        //     historyAverage: this.averageCalculator(historyScores),\n        //     technologyAverage: this.averageCalculator(technologyScores)\n        // })     \n    //   }\n\n      componentDidMount = () => {\n        const token = localStorage.getItem(\"token\")\n        const urlSplit = this.props.history.location.pathname.split(\"/\")\n        const url = urlSplit[3]\n        const path = urlSplit[2]// checks where to fetch. either student or teacher path\n        \n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/${path}s/${url}/${path}_grades`, {\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n           }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            // this.gradeSorter(data)\n            // this.getChartData();\n            // this.setState({\n            //     currentStudent: data.student\n            // })\n            if(path === \"teacher\"){\n                // console.log(data) //data presents teacher courses with course averages\n                this.getChartDataTeacher(data)\n            }\n            else{\n                this.getChartData(data.math, data.science, data.literature, data.history, data.technology); \n            } \n            // this.setState({\n            //     mathAverage: data.math,\n            //     scienceAverage: data.science,\n            //     literatureAverage: data.literature,\n            //     historyAverage: data.history,\n            //     technologyAverage: data.technology\n            // })\n        })\n        // this.getChartData(data.math, data.science, data.literature, data.history, data.technology);   \n    }\n       \n    render() {\n        // console.log(this.state)\n        return (\n            <div className=\"ui container\" style={{marginTop: \"10px\", height: '80vh'}}>\n                <h1>Profile</h1>\n                {\n                    Object.keys(this.props.currentUser).length !== 0 ?\n                    <Animated animationIn=\"fadeInLeft\" animationInDuration={2000} animationOut=\"fadeOut\" isVisible={true}>\n                    <div className=\"ui centered card\">\n                        <div className=\"image\">\n                            <img src={this.props.currentUser.image_url}/>\n                        </div>\n                        <div className=\"content\">\n                            <h1>{this.props.currentUser.first_name} {this.props.currentUser.last_name}</h1>\n                            <p>{this.props.currentUser.bio}</p>\n                        </div>\n                    </div>\n                    </Animated>\n                    :\n                    <h1>Loading</h1>\n                }\n                <h2>View Report Classifications</h2>\n                <div className=\"ui large buttons\">\n                    <button className=\"ui grey button\" onClick={() => this.handleGraphView(\"Polar\")}>Polar Graph View</button>\n                    <div className=\"or\"></div>\n                    <button className=\"ui black button\" onClick={() => this.handleGraphView(\"Bar\")}>Bar Graph View</button>\n                </div>\n                 \n                {\n                    this.state.graphView ? \n                    <Fragment>\n                        {\n                            this.state.graphView === \"Bar\" ?\n                            <Bar\n                                data={this.state.chartData}\n                                options={{\n                                    title:{\n                                        display:true,\n                                        text: 'Classification R',\n                                        fontSize:25\n                                    },\n                                    legend:{\n                                        display:false,\n                                        position: 'bottom'\n                                    }\n                                }}\n                            />\n                            :\n                            <Polar\n                                data={this.state.chartData}\n                                options={{\n                                title:{\n                                    display: 'hello',\n                                    text: 'Polar Chart Average Grades',\n                                    fontSize:25\n                                },\n                                legend:{\n                                    display:true,\n                                    position:'bottom'\n                                }\n                                }}\n                            />\n                        }\n                    </Fragment>\n                    :\n                    null\n                }                \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent)"]},"metadata":{},"sourceType":"module"}