{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\NewProblemsComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass NewProblemsComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      question: ''\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleOnSubmit = e => {\n      const token = localStorage.getItem(\"token\");\n      e.preventDefault();\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.assignmentObject.course_id, \"/assignments/\").concat(this.props.assignmentObject.id, \"/problems\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          problem: {\n            question: this.state.question,\n            assignment_id: this.props.assignmentObject.id\n          }\n        })\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        this.props.addProblemToAssignment(data, this.props.assignmentObject.id);\n      });\n      e.target.reset();\n    };\n  }\n\n  render() {\n    // console.log(this.props.currentCourse.assignments)\n    const _this$props$assignmen = this.props.assignmentObject,\n          id = _this$props$assignmen.id,\n          due_date = _this$props$assignmen.due_date,\n          name = _this$props$assignmen.name,\n          note = _this$props$assignmen.note,\n          problems = _this$props$assignmen.problems;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      className: \"ui tiny form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleOnChange,\n      required: true,\n      placeholder: \"Question\",\n      type: \"text\",\n      name: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Question\",\n      className: \"ui green submit button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), this.props.currentCourse.assignments.map(assignment => {\n      if (assignment.id === id) {\n        return assignment.problems.map(problem => {\n          return React.createElement(\"div\", {\n            className: \"ui segment\",\n            key: problem.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"Question: \", problem.question));\n        }); // console.log(assignment.problems)\n        // return <h1>hello</h1>\n      } else {\n        return null;\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCourse: state.currentCourse\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProblemToAssignment: (questionObj, assignment_id) => {\n      dispatch({\n        type: \"ADD_PROBLEM_TO_ASSIGNMENT\",\n        payload: {\n          question: questionObj,\n          assignmentId: assignment_id\n        }\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProblemsComponent);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\NewProblemsComponent.js"],"names":["React","Component","connect","NewProblemsComponent","state","question","handleOnChange","e","setState","target","name","value","handleOnSubmit","token","localStorage","getItem","preventDefault","fetch","props","assignmentObject","course_id","id","method","headers","body","JSON","stringify","problem","assignment_id","then","resp","json","data","addProblemToAssignment","reset","render","due_date","note","problems","currentCourse","assignments","map","assignment","mapStateToProps","mapDispatchToProps","dispatch","questionObj","type","payload","assignmentId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass NewProblemsComponent extends Component {\n    state = {\n        question: ''\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleOnSubmit = (e) => {\n        const token = localStorage.getItem(\"token\")\n        e.preventDefault();\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.assignmentObject.course_id}/assignments/${this.props.assignmentObject.id}/problems`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                problem: {\n                    question: this.state.question,\n                    assignment_id: this.props.assignmentObject.id\n                }\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            this.props.addProblemToAssignment(data, this.props.assignmentObject.id)\n        })\n        e.target.reset()\n    }\n    render() {\n        // console.log(this.props.currentCourse.assignments)\n        const {id, due_date, name, note, problems} = this.props.assignmentObject\n        return (\n            <div>\n                <form onSubmit={this.handleOnSubmit} className=\"ui tiny form\">\n                        <div className=\"field\">\n                            <input onChange={this.handleOnChange} required placeholder=\"Question\" type=\"text\" name=\"question\"/>\n                        </div>\n                        <input type=\"submit\" value=\"Submit Question\" className=\"ui green submit button\"></input>\n                        \n                    </form>\n                    {/* {problems.map(problem => {\n                        return <div className=\"ui segment\" key={problem.id}>\n                            <h2>Question: {problem.question}</h2>\n\n                        </div>\n                    })}    */}\n                    {this.props.currentCourse.assignments.map(assignment => {\n                        if(assignment.id === id){\n                            return assignment.problems.map(problem => {\n                                return <div className=\"ui segment\" key={problem.id}>\n                                    <h2>Question: {problem.question}</h2>\n\n                                </div>\n                            })  \n                            // console.log(assignment.problems)\n                            // return <h1>hello</h1>\n                        }\n                        else{\n                            return null\n                        }\n                    })}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentCourse: state.currentCourse\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addProblemToAssignment:(questionObj, assignment_id)=> {\n            dispatch({type:\"ADD_PROBLEM_TO_ASSIGNMENT\", payload:{question: questionObj, assignmentId: assignment_id}})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProblemsComponent)\n"]},"metadata":{},"sourceType":"module"}