{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\NewAnnouncementForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass NewAnnouncementForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      video_url: '',\n      information: '',\n      course_id: this.props.url\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleOnSubmit = e => {\n      const token = localStorage.getItem(\"token\");\n      e.preventDefault(); // console.log(this.state)\n\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/announcements\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          announcement: this.state\n        })\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        this.props.addAnnnouncement(data);\n      });\n      e.target.reset();\n    };\n  }\n\n  render() {\n    // console.log(this.props)\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      className: \"ui tiny form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"two fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleOnChange,\n      required: true,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleOnChange,\n      placeholder: \"Question\",\n      type: \"text\",\n      name: \"video_url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.handleOnChange,\n      required: true,\n      name: \"information\",\n      placeholder: \"Learning Outcomes\",\n      rows: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Question\",\n      className: \"ui submit green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addAnnnouncement: announcementObj => {\n      dispatch({\n        type: \"ADD_ANNOUNCEMENT\",\n        payload: announcementObj\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(NewAnnouncementForm);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\NewAnnouncementForm.js"],"names":["React","Component","connect","NewAnnouncementForm","state","title","video_url","information","course_id","props","url","handleOnChange","e","setState","target","name","value","handleOnSubmit","token","localStorage","getItem","preventDefault","fetch","method","headers","body","JSON","stringify","announcement","then","resp","json","data","addAnnnouncement","reset","render","mapDispatchToProps","dispatch","announcementObj","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCG,KADwC,GAChC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC;AAJlB,KADgC;;AAAA,SAQxCC,cARwC,GAQtBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAIH,KAbuC;;AAAA,SAexCC,cAfwC,GAetBL,CAAD,IAAO;AACpB,YAAMM,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAR,MAAAA,CAAC,CAACS,cAAF,GAFoB,CAGpB;;AACAC,MAAAA,KAAK,8DAAuD,KAAKb,KAAL,CAAWC,GAAlE,qBAAsF;AACvFa,QAAAA,MAAM,EAAE,MAD+E;AAEvFC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU,kBAFL;AAGL,4CAA2BN,KAA3B;AAHK,SAF8E;AAOvFO,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,YAAY,EAAE,KAAKxB;AADF,SAAf;AAPiF,OAAtF,CAAL,CAWCyB,IAXD,CAWMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAXd,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACV;AACA,aAAKvB,KAAL,CAAWwB,gBAAX,CAA4BD,IAA5B;AACH,OAfD;AAgBApB,MAAAA,CAAC,CAACE,MAAF,CAASoB,KAAT;AACH,KApCuC;AAAA;;AAqCxCC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKlB,cAArB;AAAqC,MAAA,SAAS,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,QAAQ,EAAE,KAAKN,cAAtB;AAAsC,MAAA,QAAQ,MAA9C;AAA+C,MAAA,WAAW,EAAC,OAA3D;AAAmE,MAAA,IAAI,EAAC,MAAxE;AAA+E,MAAA,IAAI,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,QAAQ,EAAE,KAAKA,cAAtB;AAAsC,MAAA,WAAW,EAAC,UAAlD;AAA6D,MAAA,IAAI,EAAC,MAAlE;AAAyE,MAAA,IAAI,EAAC,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CALJ,CADJ,EAWI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAU,MAAA,QAAQ,EAAE,KAAKA,cAAzB;AAAyC,MAAA,QAAQ,MAAjD;AAAkD,MAAA,IAAI,EAAC,aAAvD;AAAqE,MAAA,WAAW,EAAC,mBAAjF;AAAqG,MAAA,IAAI,EAAC,GAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,CAXJ,EAeI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,cAA3B;AAA0C,MAAA,SAAS,EAAC,wBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AAmBH;;AA1DuC;;AA6D5C,SAASyB,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AACHJ,IAAAA,gBAAgB,EAAGK,eAAD,IAAoB;AAClCD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,OAAO,EAAEF;AAApC,OAAD,CAAR;AACH;AAHE,GAAP;AAKH;;AAED,eAAepC,OAAO,CAAC,IAAD,EAAOkC,kBAAP,CAAP,CAAkCjC,mBAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\n\nclass NewAnnouncementForm extends Component {\n    state = {\n        title: '',\n        video_url: '',\n        information: '',\n        course_id: this.props.url\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        \n    }\n\n    handleOnSubmit = (e) => {\n        const token = localStorage.getItem(\"token\")\n        e.preventDefault();\n        // console.log(this.state)\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/announcements`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                announcement: this.state\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            this.props.addAnnnouncement(data)\n        })\n        e.target.reset()\n    }\n    render() {\n        // console.log(this.props)\n        return (\n            <form onSubmit={this.handleOnSubmit} className=\"ui tiny form\">\n                <div className=\"two fields\">\n                    <div className=\"field\">\n                    {/* <label>First Name</label> */}\n                    <input onChange={this.handleOnChange} required placeholder=\"Title\" type=\"text\" name=\"title\"/>\n                    </div>\n                    <div className=\"field\">\n                    {/* <label>Last Name</label> */}\n                    <input onChange={this.handleOnChange} placeholder=\"Question\" type=\"text\" name=\"video_url\"/>\n                    </div>\n                </div>\n                <div className=\"field\">\n                     {/* <label>Information</label> */}\n                     <textarea onChange={this.handleOnChange} required name=\"information\" placeholder=\"Learning Outcomes\" rows=\"2\" ></textarea>\n                 </div>\n                <input type=\"submit\" value=\"Add Question\" className=\"ui submit green button\"></input>\n            </form>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addAnnnouncement: (announcementObj)=> {\n            dispatch({type: \"ADD_ANNOUNCEMENT\", payload: announcementObj})\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(NewAnnouncementForm)\n"]},"metadata":{},"sourceType":"module"}