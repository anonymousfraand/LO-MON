{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\SubmittedAssignments.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport GradingComponent from './GradingComponent';\nconst containerStyle = {\n  border: \"2px solid black\",\n  borderRadius: \"10px\",\n  overflow: \"hidden\"\n};\n\nclass SubmittedAssignments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSubmissionView: '',\n      // grade: 0,\n      loaded: false\n    };\n\n    this.handleSubmitGrade = () => {\n      // let percentage_grade =  (this.state.grade / (this.props.currentAssignment.problems.length * 10)) * 100 //each answer is worth 10 points max\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/submissions/\".concat(this.state.currentSubmissionView), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          // grade: percentage_grade\n          id: this.state.currentSubmissionView\n        })\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        this.props.updateSubmission(data);\n        this.setState({\n          currentSubmissionView: ''\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      const course_id = this.props.location.pathname.split(\"/\")[2];\n      const assignment_id = this.props.location.pathname.split(\"/\")[4]; // console.log(assignment_id)\n\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(course_id, \"/assignments/\").concat(assignment_id), {\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        this.props.setAssignment(data);\n        this.setState({\n          loaded: true\n        });\n      });\n    };\n\n    this.handleAssignmentClick = id => {\n      // console.log(id)\n      this.setState({\n        currentView: id\n      });\n\n      if (id === this.state.currentSubmissionView) {\n        this.setState({\n          currentSubmissionView: ''\n        });\n      } else {\n        this.setState({\n          currentSubmissionView: id\n        });\n      }\n    };\n\n    this.checkGradeColor = grade => {\n      // adjust color of grade notification\n      // debugger\n      if (grade > 89 && grade <= 100) {\n        return \"green\";\n      } else if (grade > 79 && grade <= 89) {\n        return \"blue\";\n      } else if (grade > 69 && grade <= 79) {\n        return \"gold\";\n      } else {\n        return \"red\";\n      }\n    };\n  }\n\n  render() {\n    // console.log(this.props.location.pathname.split(\"/\"))\n    // console.log(this.props.currentAssignment)\n    // console.log(Object.keys(this.props.currentAssignment).length)\n    // console.log(this.props.location.pathname.split(\"/\")[4])\n    return React.createElement(\"div\", {\n      className: \"ui grid container\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: containerStyle,\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Submitted Assignments\")), // before checks for object.keys length !== 0\n    this.state.loaded ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.currentAssignment.submissions.length !== 0 ? this.props.currentAssignment.submissions.map(submission => {\n      return React.createElement(\"div\", {\n        key: submission.id,\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"From: \", submission.student.first_name), React.createElement(\"button\", {\n        className: \"ui yellow button\",\n        onClick: () => {\n          this.handleAssignmentClick(submission.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"View\"), submission.created_at !== submission.updated_at ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Grade Assigned: \"), React.createElement(\"div\", {\n        className: \"ui indicating progress stats\",\n        \"data-percent\": submission.grade_assigned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bar\",\n        style: {\n          width: \"\".concat(submission.grade_assigned, \"%\"),\n          backgroundColor: this.checkGradeColor(submission.grade_assigned)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, submission.grade_assigned, \"%\")))) : null);\n    }) : React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"No submissions yet!\"))) : React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui active inverted dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui small text loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Loading\"))))), React.createElement(\"div\", {\n      className: \"ten wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Select a Submission to View\"), this.state.currentSubmissionView ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitGrade,\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Submit Grade\"), this.props.currentAssignment.submissions.map(submission => {\n      if (submission.id === this.state.currentSubmissionView) {\n        return React.createElement(Fragment, {\n          key: submission.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, submission.assignment.due_date < submission.created_at ? React.createElement(\"h4\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"ALERT: Late Submission\") : //    <h1>Not late</h1>\n        null, submission.answers.map(answer => {\n          return React.createElement(GradingComponent, {\n            key: answer.id,\n            addTallyToGrade: this.addTallyToGrade,\n            answer: answer,\n            currentAssignment: this.props.currentAssignment,\n            submission: submission,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          });\n        }));\n      } else {\n        return null;\n      }\n    })) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      src: \"https://giphy.com/embed/xl3Biy7X0kRlzlQBx4\",\n      width: \"480\",\n      height: \"270\",\n      frameBorder: \"0\",\n      className: \"giphy-embed\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://giphy.com/gifs/ramseysolutions-whatever-xl3Biy7X0kRlzlQBx4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"via GIPHY\"))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentAssignment: state.currentAssignment\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAssignment: assignmentObj => {\n      dispatch({\n        type: \"SET_ASSIGNMENT\",\n        payload: assignmentObj\n      });\n    },\n    updateSubmission: submissionObj => {\n      dispatch({\n        type: \"UPDATE_SUBMISSION_IN_CURRENT_ASSIGNMENT\",\n        payload: submissionObj\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubmittedAssignments);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\SubmittedAssignments.js"],"names":["React","Component","Fragment","connect","GradingComponent","containerStyle","border","borderRadius","overflow","SubmittedAssignments","state","currentSubmissionView","loaded","handleSubmitGrade","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","id","then","resp","json","data","props","updateSubmission","setState","componentDidMount","course_id","location","pathname","split","assignment_id","setAssignment","handleAssignmentClick","currentView","checkGradeColor","grade","render","marginTop","display","justifyContent","alignItems","margin","currentAssignment","submissions","length","map","submission","student","first_name","created_at","updated_at","grade_assigned","width","backgroundColor","assignment","due_date","color","answers","answer","addTallyToGrade","mapStateToProps","mapDispatchToProps","dispatch","assignmentObj","type","payload","submissionObj"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {connect} from 'react-redux'\nimport GradingComponent from './GradingComponent'\n\nconst containerStyle = {\n    border: \"2px solid black\",\n    borderRadius: \"10px\",\n    overflow: \"hidden\"\n}\n\n\n\nclass SubmittedAssignments extends Component {\n\n    state={\n        currentSubmissionView: '',\n        // grade: 0,\n        loaded: false\n    }\n\n    handleSubmitGrade = () => {\n        // let percentage_grade =  (this.state.grade / (this.props.currentAssignment.problems.length * 10)) * 100 //each answer is worth 10 points max\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/submissions/${this.state.currentSubmissionView}`,{\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                // grade: percentage_grade\n                id: this.state.currentSubmissionView\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            this.props.updateSubmission(data)\n            this.setState({\n                currentSubmissionView: ''\n            })\n            \n        })\n    }\n\n    // addTallyToGrade = (num) => {\n    //     this.setState({\n    //         grade: this.state.grade + num\n    //     })\n    // }\n    \n    componentDidMount = () => {\n        const course_id = this.props.location.pathname.split(\"/\")[2]\n        const assignment_id = this.props.location.pathname.split(\"/\")[4]\n        // console.log(assignment_id)\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${course_id}/assignments/${assignment_id}`, {\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            this.props.setAssignment(data)\n            this.setState({\n                loaded: true\n            })\n        })\n    }\n\n    handleAssignmentClick = (id) => {\n        // console.log(id)\n        this.setState({\n            currentView: id\n        })\n        if(id === this.state.currentSubmissionView){\n            this.setState({\n                currentSubmissionView: ''\n            })\n        }\n        else{\n            this.setState({\n                currentSubmissionView: id\n            })\n        } \n    }\n\n    checkGradeColor = (grade) => {\n        // adjust color of grade notification\n        // debugger\n        if(grade > 89 && grade <= 100){\n            return \"green\"\n        }\n        else if (grade > 79 && grade <= 89){\n            return \"blue\"\n        }\n        else if (grade > 69 && grade <= 79){\n            return \"gold\"\n        }\n        else{\n            return \"red\"\n        }\n    }\n    \n    render() {\n        // console.log(this.props.location.pathname.split(\"/\"))\n        // console.log(this.props.currentAssignment)\n        // console.log(Object.keys(this.props.currentAssignment).length)\n        // console.log(this.props.location.pathname.split(\"/\")[4])\n        return (\n            <div className=\"ui grid container\" style={{marginTop: \"10px\"}}>\n                <div className=\"six wide column\">\n                    <div style={containerStyle} className=\"ui container\">\n                        <div style={{display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"}}>\n                            <h1 style={{margin: 0}}>Submitted Assignments</h1>\n                            \n                        </div>\n                        {\n                            // before checks for object.keys length !== 0\n                            this.state.loaded ?\n                            <Fragment>\n                            {  \n                                this.props.currentAssignment.submissions.length !== 0 ?\n                                    \n                                    this.props.currentAssignment.submissions.map(submission => {\n                                        return <div key={submission.id} className=\"ui segment\">\n                                            <h4>From: {submission.student.first_name}</h4>\n                                            \n                                            <button className=\"ui yellow button\" onClick={()=>{\n                                                this.handleAssignmentClick(submission.id)\n                                                }}>View</button>\n                                            {\n                                                submission.created_at !== submission.updated_at ?\n                                                <Fragment>\n                                                    <h4>Grade Assigned: </h4>\n                                                        {/* <span style={this.checkGradeColor(submission.grade_assigned)}>{submission.grade_assigned}</span> %</h4> */}\n                                                    <div className=\"ui indicating progress stats\" data-percent={submission.grade_assigned} >\n                                                        {/* <div className=\"bar\" style={{width: `${submission.grade_assigned}%`}}> */}\n                                                        <div className=\"bar\" style={{width: `${submission.grade_assigned}%`, backgroundColor: this.checkGradeColor(submission.grade_assigned)}}>\n                                                            <div className=\"progress\">{submission.grade_assigned}%</div>\n                                                        </div>\n                                                    </div>\n                                                    {/* <h4>Percentage: {(submission.grade_assigned / (submission.answers.length * 10)) * 100} %</h4> */}\n                                                </Fragment>\n                                                :\n                                                null\n                                            }\n                                        </div>\n                                    })\n                                :\n                                <div className=\"ui segment\">\n                                    <h1>No submissions yet!</h1>\n                                </div>\n                            }\n                            </Fragment>\n                            \n                            :\n                            <div className=\"ui segment\">\n                                <div className=\"ui active inverted dimmer\">\n                                    <div className=\"ui small text loader\">Loading</div>\n                                </div>\n                            </div>\n                        }         \n                    </div>\n                </div>\n\n                <div className=\"ten wide column\">\n                    <div style={containerStyle}>\n                        <h1>Select a Submission to View</h1> \n                        {\n                            this.state.currentSubmissionView ?\n                            <Fragment>\n                            <button onClick={this.handleSubmitGrade} className=\"ui green button\">Submit Grade</button>\n                            {\n                                this.props.currentAssignment.submissions.map(submission => {\n                                if(submission.id === this.state.currentSubmissionView){\n                                   return <Fragment key={submission.id}>\n                                       {/* <h1>{submission.assignment.due_date}</h1> */}\n                                       {/* <h1>{submission.created_at}</h1> */}\n                                       {\n                                           submission.assignment.due_date < submission.created_at ?\n                                           <h4 style={{color: \"red\"}}>ALERT: Late Submission</h4>\n                                           :\n                                        //    <h1>Not late</h1>\n                                            null\n                                       }\n                                        {\n                                            submission.answers.map(answer => {\n                                                return <GradingComponent key={answer.id} addTallyToGrade={this.addTallyToGrade} answer={answer} currentAssignment={this.props.currentAssignment} submission = {submission}/>\n                                                                \n                                            })\n                                        }\n                                    </Fragment>\n                                }\n                                else{\n                                    return null\n                                }    \n                            })\n                            }\n                            </Fragment> \n                            :\n                            <Fragment>\n                                 <iframe src=\"https://giphy.com/embed/xl3Biy7X0kRlzlQBx4\" width=\"480\" height=\"270\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/ramseysolutions-whatever-xl3Biy7X0kRlzlQBx4\">via GIPHY</a></p>                          \n                            </Fragment>\n                           \n                        }    \n                        \n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentAssignment: state.currentAssignment\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        setAssignment:(assignmentObj)=> {\n            dispatch({type:\"SET_ASSIGNMENT\", payload: assignmentObj})\n        },\n        updateSubmission: (submissionObj)=> {\n            dispatch({type: \"UPDATE_SUBMISSION_IN_CURRENT_ASSIGNMENT\", payload: submissionObj})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubmittedAssignments)"]},"metadata":{},"sourceType":"module"}