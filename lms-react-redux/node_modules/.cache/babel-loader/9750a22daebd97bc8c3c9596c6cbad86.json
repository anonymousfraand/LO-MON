{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\Assignment.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { Confirm } from 'semantic-ui-react';\nconst lateStyle = {\n  color: \"red\"\n};\n\nclass Assignment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.show = () => this.setState({\n      open: true\n    });\n\n    this.handleConfirm = id => {\n      this.handleOnClick(id);\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      open: false\n    });\n\n    this.handleOnClick = id => {\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/assignments/\").concat(id), {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data) //returns json message of delete success\n        this.props.removeAssignment(id);\n      }); // this.props.removeAssignment(id);\n    };\n\n    this.handleEditClick = assignmentClicked => {\n      // console.log(assignmentClicked)\n      this.props.handleProblemClick(assignmentClicked);\n    };\n\n    this.checkIfSubmitted = () => {\n      let found = this.props.assignment.submissions.find(submission => {\n        return submission.student_id === this.props.currentUser.id;\n      });\n      return found;\n    };\n\n    this.dateToday = () => {\n      let today = new Date();\n      let dd = today.getDate();\n      let mm = today.getMonth() + 1;\n      let yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      today = yyyy + '-' + mm + '-' + dd;\n      return today;\n    };\n\n    this.checkGradeColor = grade => {\n      // adjust color of grade notification\n      // debugger\n      if (grade > 89 && grade <= 100) {\n        return \"green\";\n      } else if (grade > 79 && grade <= 89) {\n        return \"blue\";\n      } else if (grade > 69 && grade <= 79) {\n        return \"gold\";\n      } else {\n        return \"red\";\n      }\n    };\n  }\n\n  render() {\n    // console.log(this.props.assignment)\n    // let found = this.props.assignment.submissions.find(submission => {\n    //     // debugger\n    //     return submission.student_id === this.props.currentUser.id\n    // })\n    // console.log(found)\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.assignment.name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.assignment.note), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Due: \", React.createElement(Moment, {\n      style: this.props.assignment.due_date < this.dateToday() ? lateStyle : null,\n      format: \"MM/DD/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.assignment.due_date)), Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-tooltip\": \"Delete Assignment\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: this.show,\n      className: \"trash red big icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Confirm, {\n      open: this.state.open,\n      header: \"Deleting this assignment.\",\n      onCancel: this.handleCancel,\n      onConfirm: () => this.handleConfirm(this.props.assignment.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      \"data-tooltip\": \"Add Questions to Assignment\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.props.handleAssignmentClick(this.props.assignment),\n      className: \"edit violet big icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Link, {\n      style: {\n        color: 'black'\n      },\n      to: {\n        pathname: \"/courses/\".concat(this.props.assignment.course_id, \"/assignments/\").concat(this.props.assignment.id, \"/submissions\"),\n        assignmentObj: this.props.assignment\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-tooltip\": \"View Submissions\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"folder orange open outline big icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.checkIfSubmitted() ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui disabled red button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Submitted\"), this.checkIfSubmitted().created_at === this.checkIfSubmitted().updated_at ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Grade Pending\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Graded! Result: \"), React.createElement(\"div\", {\n      className: \"ui indicating progress stats\",\n      \"data-percent\": this.checkIfSubmitted().grade_assigned,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar\",\n      style: {\n        width: \"\".concat(this.checkIfSubmitted().grade_assigned, \"%\"),\n        backgroundColor: this.checkGradeColor(this.checkIfSubmitted().grade_assigned)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.checkIfSubmitted().grade_assigned, \"%\"))))) : this.props.assignment.problems.length !== 0 ? React.createElement(\"button\", {\n      onClick: () => this.props.handleAssignmentClick(this.props.assignment),\n      className: \"ui teal button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Start\") : React.createElement(\"button\", {\n      className: \"ui teal disabled button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"No Problems Assigned\")) // <button onClick={() => this.props.handleAssignmentClick(this.props.assignment)} className=\"ui teal button\">Start</button>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeAssignment: id => {\n      dispatch({\n        type: \"REMOVE_ASSIGNMENT_FROM_COURSE\",\n        payload: id\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Assignment);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\Assignment.js"],"names":["React","Component","Fragment","connect","Moment","Link","Confirm","lateStyle","color","Assignment","state","open","show","setState","handleConfirm","id","handleOnClick","handleCancel","token","localStorage","getItem","fetch","props","url","method","headers","then","resp","json","data","removeAssignment","handleEditClick","assignmentClicked","handleProblemClick","checkIfSubmitted","found","assignment","submissions","find","submission","student_id","currentUser","dateToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","checkGradeColor","grade","render","name","note","due_date","Object","keys","length","position","handleAssignmentClick","pathname","course_id","assignmentObj","created_at","updated_at","grade_assigned","width","backgroundColor","problems","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component,Fragment } from 'react'\nimport {connect} from 'react-redux'\nimport Moment from 'react-moment'\nimport {Link} from 'react-router-dom'\nimport {Confirm} from 'semantic-ui-react'\n\nconst lateStyle = {\n    color: \"red\"\n}\nclass Assignment extends Component {\n\n    state = { open: false }\n\n    show = () => this.setState({ open: true })\n    handleConfirm = (id) => {\n        this.handleOnClick(id)\n        this.setState({ \n            open: false \n        })\n    }\n    handleCancel = () => this.setState({ open: false })\n    \n    handleOnClick = (id) => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/assignments/${id}`,{\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n           }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data) //returns json message of delete success\n            this.props.removeAssignment(id);\n        })\n        // this.props.removeAssignment(id);\n    }\n\n    handleEditClick = (assignmentClicked) => {\n        // console.log(assignmentClicked)\n        this.props.handleProblemClick(assignmentClicked)\n    } \n\n    checkIfSubmitted = () => {\n        let found = this.props.assignment.submissions.find(submission => {\n            return submission.student_id === this.props.currentUser.id\n        })\n        return found\n    }\n\n    dateToday = () => {\n        let today = new Date();\n        let dd = today.getDate();\n        let mm = today.getMonth() + 1;\n        let yyyy = today.getFullYear();\n        if(dd<10){\n            dd='0'+dd\n        } \n        if(mm<10){\n            mm='0'+mm\n        } \n        today = yyyy + '-' + mm + '-' + dd\n        \n        return today \n    }\n\n    checkGradeColor = (grade) => {\n        // adjust color of grade notification\n        // debugger\n        if(grade > 89 && grade <= 100){\n            return \"green\"\n        }\n        else if (grade > 79 && grade <= 89){\n            return \"blue\"\n        }\n        else if (grade > 69 && grade <= 79){\n            return \"gold\"\n        }\n        else{\n            return \"red\"\n        }\n    }\n\n    render() {\n        // console.log(this.props.assignment)\n        // let found = this.props.assignment.submissions.find(submission => {\n        //     // debugger\n        //     return submission.student_id === this.props.currentUser.id\n        // })\n        // console.log(found)\n    \n        return (\n            <div className=\"ui segment\">\n                <h3>{this.props.assignment.name}</h3>\n                <h4>{this.props.assignment.note}</h4>\n                {/* checks if assignment is late, displaying the text as red */}\n                <h4>Due: <Moment style={this.props.assignment.due_date < this.dateToday() ? lateStyle : null} format=\"MM/DD/YYYY\">{this.props.assignment.due_date}</Moment></h4>\n                {/* <h1><Moment format=\"MM/DD/YYYY\">{Date.now()}</Moment></h1>  */}\n                {/* <h4>Due {<Moment fromNow>{this.props.assignment.due_date}</Moment>}</h4> */}\n                {\n                    Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ?\n                    <Fragment>\n                        <span data-tooltip=\"Delete Assignment\" data-position=\"top left\">\n                            <i onClick={this.show} className=\"trash red big icon\"></i> \n                            <Confirm\n                                open={this.state.open}\n                                header='Deleting this assignment.'\n                                onCancel={this.handleCancel}\n                                onConfirm={() => this.handleConfirm(this.props.assignment.id)}\n                                />\n                        </span>\n                        \n                        <span data-tooltip=\"Add Questions to Assignment\" data-position=\"top left\">\n                            <i onClick={()=> this.props.handleAssignmentClick(this.props.assignment)}className=\"edit violet big icon\"></i>   \n                        </span>\n                        <Link style={{color: 'black'}} to={{pathname: `/courses/${this.props.assignment.course_id}/assignments/${this.props.assignment.id}/submissions`, assignmentObj: this.props.assignment}}>\n                            <span data-tooltip=\"View Submissions\" data-position=\"top left\"> \n                                <i className=\"folder orange open outline big icon\"></i>\n                            </span>\n                        </Link>\n                        \n                    </Fragment>\n                          \n                    :\n                    <Fragment>\n                        {\n                            this.checkIfSubmitted() ?\n                            <Fragment>\n                                 <button className=\"ui disabled red button\">Submitted</button>\n                                 {this.checkIfSubmitted().created_at === this.checkIfSubmitted().updated_at ? \n                                    <h4>Grade Pending</h4> \n                                    :\n                                    <Fragment>\n                                    <h4>Graded! Result: </h4>\n                                        {/* <span style={this.checkGradeColor(this.checkIfSubmitted().grade_assigned)}>{this.checkIfSubmitted().grade_assigned}</span>%</h4> */}\n                                    <div className=\"ui indicating progress stats\" data-percent={this.checkIfSubmitted().grade_assigned} >\n                                        <div className=\"bar\" style={{width: `${this.checkIfSubmitted().grade_assigned}%`, backgroundColor: this.checkGradeColor(this.checkIfSubmitted().grade_assigned)}}>\n                                            <div className=\"progress\" >{this.checkIfSubmitted().grade_assigned}%</div>\n                                        </div>\n                                    </div>\n                                    </Fragment>\n                                }\n                            </Fragment> \n                           \n                            \n                            :\n                            this.props.assignment.problems.length !== 0 ?\n                            <button onClick={() => this.props.handleAssignmentClick(this.props.assignment)} className=\"ui teal button\">Start</button>\n                            :\n                            <button className=\"ui teal disabled button\">No Problems Assigned</button>\n                        }\n                    </Fragment>\n                    // <button onClick={() => this.props.handleAssignmentClick(this.props.assignment)} className=\"ui teal button\">Start</button>\n                }\n                \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        removeAssignment:(id)=> {\n            dispatch({type:\"REMOVE_ASSIGNMENT_FROM_COURSE\", payload:id})\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Assignment)\n"]},"metadata":{},"sourceType":"module"}