{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\CoursePageContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport AnnouncementCard from './AnnouncementCard';\nimport Assignment from './Assignment';\nimport NewAnnouncementForm from './NewAnnouncementForm';\nimport EditAnnouncementForm from './EditAnnouncementForm';\nimport AssignmentProblemComponent from './AssignmentProblemsComponent'; // import NewProblemsComponent from './NewProblemsComponent'\n\nconst containerStyle = {\n  border: \"2px solid black\",\n  borderRadius: \"10px\",\n  overflow: \"hidden\"\n};\n\nclass CoursePageContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editAssignmentId: '',\n      assignmentObject: {},\n      currentView: ''\n    };\n\n    this.handleAssignmentClick = assignment => {\n      // console.log(assignment)\n      if (this.state.currentView === \"assignments\" && assignment.id === this.state.assignmentObject.id) {\n        this.setState({\n          currentView: ''\n        });\n      } else {\n        this.setState({\n          assignmentObject: assignment,\n          currentView: 'assignments'\n        });\n      }\n    };\n\n    this.url = this.props.history.location.pathname.split(\"/\");\n\n    this.componentDidMount = () => {\n      const token = localStorage.getItem(\"token\"); // let url = this.props.history.location.pathname.split(\"/\")\n      // console.log(url[url.length-1])\n\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.url[this.url.length - 1]), {\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        this.props.setCourse(data); // console.log(data)\n      });\n    };\n\n    this.handleOnClick = category => {\n      this.setState({\n        currentView: category\n      });\n      this.renderView();\n    };\n\n    this.handleEditClick = id => {\n      // console.log(id)\n      this.setState({\n        editAssignmentId: id\n      });\n    };\n\n    this.sortAnnouncementsByRecent = announcements => {\n      // console.log(announcements)\n      announcements.sort((a, b) => a.created_at < b.created_at ? 1 : -1);\n      return announcements;\n    };\n  }\n\n  render() {\n    // let url = this.props.history.location.pathname.split(\"/\")\n    // console.log(url[url.length-1])\n    // console.log(this.state.assignmentObject)\n    // console.log(this.props.currentCourse)\n    // console.log(this.props.course.announcements)\n    return React.createElement(\"div\", {\n      className: \"ui grid container\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: containerStyle,\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Assignments\"), Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? React.createElement(Link, {\n      style: {\n        color: 'black'\n      },\n      to: \"\".concat(this.props.location.pathname, \"/assignments/new\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-tooltip\": \"Add New Assignment\",\n      \"data-position\": \"bottom right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"plus blue big square icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))) : null), this.props.course.assignments !== undefined ? // null\n    this.props.course.assignments.length === 0 ? React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"No Assignments Yet!\")) : this.props.course.assignments.map(assignment => {\n      return React.createElement(Assignment, {\n        handleProblemClick: this.handleProblemClick,\n        handleAssignmentClick: this.handleAssignmentClick,\n        handleEditClick: this.handleEditClick,\n        key: assignment.id,\n        url: this.url[this.url.length - 1],\n        assignment: assignment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }) : null)), React.createElement(\"div\", {\n      className: \"ten wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.currentView ? React.createElement(AssignmentProblemComponent, {\n      assignmentObject: this.state.assignmentObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"C\"), //renders announcements\n    //checks if currentUser is defined and also if the user is a teacher\n    Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? React.createElement(NewAnnouncementForm, {\n      url: this.url[this.url.length - 1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }) : null, this.props.course.announcements !== undefined ? // null\n    this.props.course.announcements.length === 0 ? React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }) : // this.props.course.announcements.map(announcement => {\n    this.sortAnnouncementsByRecent(this.props.course.announcements).map(announcement => {\n      if (announcement.id === this.state.editAssignmentId) {\n        return React.createElement(EditAnnouncementForm, {\n          key: announcement.id,\n          url: this.url[this.url.length - 1],\n          handleEditClick: this.handleEditClick,\n          announcement: announcement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n      } else {\n        //add comment render here. similar approach to edit announcement form\n        return React.createElement(AnnouncementCard, {\n          handleEditClick: this.handleEditClick,\n          key: announcement.id,\n          url: this.url[this.url.length - 1],\n          announcement: announcement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      } // return <AnnouncementCard key={announcement.id} url={this.url[this.url.length-1]} announcement={announcement}/>\n\n    }) : React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui active inverted dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui large text loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))))) // <div className=\"ui grid\" style={{marginTop: \"10px\", height: '80vh'}}>\n    //     <div className=\"three wide column\">\n    //         <div className=\"ui vertical fluid tabular menu\">\n    //             <div onClick={() => this.handleOnClick('Announcements')} className=\"item\">\n    //                 Announcements\n    //             </div>\n    //             <div className=\"item\">\n    //                 Assignments\n    //             </div>\n    //         </div>\n    //     </div>\n    //     <div className=\"thirteen wide stretched column\">\n    //         {this.state.currentView === 'Announcements'? \n    //         <Fragment>\n    //             <h1>Announcements</h1>\n    //             <div className=\"ui segment\">\n    //                <h1>0</h1>\n    //             </div>\n    //             <div className=\"ui segment\">\n    //                 <h1>1</h1>\n    //             </div>\n    //             <div className=\"ui segment\">\n    //                 <h1>3</h1>\n    //             </div>\n    //             <div className=\"ui segment\">\n    //                <h1>0</h1>\n    //             </div>\n    //             <div className=\"ui segment\">\n    //                 <h1>1</h1>\n    //             </div>\n    //             <div className=\"ui segment\">\n    //                 <h1>3</h1>\n    //             </div>\n    //         </Fragment>\n    //         :\n    //         <div className=\"ui segment\">\n    //             no\n    //         </div>\n    //     }\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    // currentUserCourses: state.currentUserCourses\n    course: state.currentCourse,\n    currentUser: state.currentUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCourse: courseObj => {\n      dispatch({\n        type: \"SET_COURSE\",\n        payload: courseObj\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursePageContainer);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\CoursePageContainer.js"],"names":["React","Component","Fragment","connect","Link","AnnouncementCard","Assignment","NewAnnouncementForm","EditAnnouncementForm","AssignmentProblemComponent","containerStyle","border","borderRadius","overflow","CoursePageContainer","state","editAssignmentId","assignmentObject","currentView","handleAssignmentClick","assignment","id","setState","url","props","history","location","pathname","split","componentDidMount","token","localStorage","getItem","fetch","length","headers","then","resp","json","data","setCourse","handleOnClick","category","renderView","handleEditClick","sortAnnouncementsByRecent","announcements","sort","a","b","created_at","render","marginTop","display","justifyContent","alignItems","margin","Object","keys","currentUser","position","color","course","assignments","undefined","map","handleProblemClick","announcement","mapStateToProps","currentCourse","mapDispatchToProps","dispatch","courseObj","type","payload"],"mappings":"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","sourcesContent":["import React, { Component,Fragment} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport AnnouncementCard from './AnnouncementCard'\nimport Assignment from './Assignment'\nimport NewAnnouncementForm from './NewAnnouncementForm'\nimport EditAnnouncementForm from './EditAnnouncementForm'\nimport AssignmentProblemComponent from './AssignmentProblemsComponent'\n// import NewProblemsComponent from './NewProblemsComponent'\n\nconst containerStyle = {\n    border: \"2px solid black\",\n    borderRadius: \"10px\",\n    overflow: \"hidden\"\n    \n}\nclass CoursePageContainer extends Component {\n    // currentPath = this.props.history.location.pathname\n    //once here. a separate fetch MUST be made to course model.\n    state = {\n        editAssignmentId: '',\n        assignmentObject: {},\n        currentView: ''\n    }\n\n    handleAssignmentClick = (assignment) => {\n        // console.log(assignment)\n        if(this.state.currentView === \"assignments\" && assignment.id === this.state.assignmentObject.id){\n            this.setState({\n                currentView: ''\n            })\n        }\n        else{\n            this.setState({\n                assignmentObject: assignment,\n                currentView: 'assignments'\n            })\n        } \n    }\n    url = this.props.history.location.pathname.split(\"/\")\n    componentDidMount = () => {\n\n        const token = localStorage.getItem(\"token\")\n        // let url = this.props.history.location.pathname.split(\"/\")\n        // console.log(url[url.length-1])\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.url[this.url.length-1]}`, {\n           headers: {\n                \"Authorization\": `Bearer ${token}`\n           }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.props.setCourse(data)\n            // console.log(data)\n        })\n    }\n    handleOnClick = (category) => {\n        this.setState({\n            currentView: category\n        })\n        this.renderView()\n    }\n\n    handleEditClick = (id) => {\n        // console.log(id)\n        this.setState({\n            editAssignmentId: id\n        })\n    }\n\n    sortAnnouncementsByRecent = (announcements) => {\n        // console.log(announcements)\n        announcements.sort((a, b) => (a.created_at < b.created_at) ? 1 : -1)\n        return announcements\n    }\n\n    render() {\n        // let url = this.props.history.location.pathname.split(\"/\")\n        // console.log(url[url.length-1])\n        // console.log(this.state.assignmentObject)\n        // console.log(this.props.currentCourse)\n        // console.log(this.props.course.announcements)\n        return (\n            <div className=\"ui grid container\" style={{marginTop: \"10px\"}}>\n                <div className=\"six wide column\">\n                    <div style={containerStyle} className=\"ui container\">\n                        <div style={{display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"}}>\n                            <h1 style={{margin: 0}}>Assignments</h1>\n                            {\n                                Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ?\n                                <Link style={{color: 'black'}} to= {`${this.props.location.pathname}/assignments/new`}>\n                                    \n                                    <span data-tooltip=\"Add New Assignment\" data-position=\"bottom right\">\n                                        <i className=\"plus blue big square icon\"></i>\n                                    </span>\n                                </Link>\n                                :\n                                null\n                            }\n                        </div>\n                        {/* <h1>Assignments</h1> */}\n                        {\n                            this.props.course.assignments !== undefined ?\n                            // null\n                            this.props.course.assignments.length === 0 ? \n                                <div className=\"ui segment\">\n                                    <h2>No Assignments Yet!</h2>\n                                </div>\n                                :\n                                this.props.course.assignments.map(assignment => {\n                                        return <Assignment handleProblemClick={this.handleProblemClick} handleAssignmentClick={this.handleAssignmentClick} handleEditClick={this.handleEditClick} key={assignment.id} url={this.url[this.url.length-1]} assignment={assignment}/>\n                                })\n                            :\n                            null\n                        }\n                    </div>\n                </div>\n\n                <div className=\"ten wide column\">\n                    <div style={containerStyle}>\n                  \n                    {this.state.currentView ? \n                    \n                    <AssignmentProblemComponent assignmentObject={this.state.assignmentObject}/> \n                    :\n                    <Fragment> \n                        <h1>C</h1>\n                        {\n                            //renders announcements\n                            //checks if currentUser is defined and also if the user is a teacher\n                            Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? \n                            <NewAnnouncementForm url={this.url[this.url.length-1]}/>\n                            :\n                            null\n                        }\n                        \n                        {\n                            this.props.course.announcements !== undefined ?\n                            // null\n                            this.props.course.announcements.length === 0 ? \n                            <div className=\"ui segment\">\n                                {/* <h2>No Announcements Yet!</h2> */}\n                            </div>\n                            \n                            :\n                            // this.props.course.announcements.map(announcement => {\n                            this.sortAnnouncementsByRecent(this.props.course.announcements).map(announcement => {\n                                if (announcement.id === this.state.editAssignmentId){\n                                    return <EditAnnouncementForm key={announcement.id} url={this.url[this.url.length-1]} handleEditClick={this.handleEditClick} announcement={announcement}/>\n                                }\n                                else{\n                                    //add comment render here. similar approach to edit announcement form\n                                    return <AnnouncementCard handleEditClick={this.handleEditClick} key={announcement.id} url={this.url[this.url.length-1]} announcement={announcement}/>\n                                }\n                                // return <AnnouncementCard key={announcement.id} url={this.url[this.url.length-1]} announcement={announcement}/>\n                            })\n                            :\n                            <div className=\"ui segment\">\n                            <div className=\"ui active inverted dimmer\">\n                                <div className=\"ui large text loader\">Loading</div>\n                            </div>\n                            <p></p>\n                            <p></p>\n                            <p></p>\n                            </div>\n                        }\n                        </Fragment>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n            // <div className=\"ui grid\" style={{marginTop: \"10px\", height: '80vh'}}>\n            //     <div className=\"three wide column\">\n            //         <div className=\"ui vertical fluid tabular menu\">\n                       \n            //             <div onClick={() => this.handleOnClick('Announcements')} className=\"item\">\n            //                 Announcements\n            //             </div>\n\n            //             <div className=\"item\">\n            //                 Assignments\n            //             </div>\n            //         </div>\n            //     </div>\n            //     <div className=\"thirteen wide stretched column\">\n            //         {this.state.currentView === 'Announcements'? \n            //         <Fragment>\n            //             <h1>Announcements</h1>\n            //             <div className=\"ui segment\">\n            //                <h1>0</h1>\n            //             </div>\n            //             <div className=\"ui segment\">\n            //                 <h1>1</h1>\n            //             </div>\n            //             <div className=\"ui segment\">\n            //                 <h1>3</h1>\n            //             </div>\n            //             <div className=\"ui segment\">\n            //                <h1>0</h1>\n            //             </div>\n            //             <div className=\"ui segment\">\n            //                 <h1>1</h1>\n            //             </div>\n            //             <div className=\"ui segment\">\n            //                 <h1>3</h1>\n            //             </div>\n                        \n            //         </Fragment>\n            //         :\n            //         <div className=\"ui segment\">\n            //             no\n            //         </div>\n            //     }\n            //     </div>\n            // </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        // currentUserCourses: state.currentUserCourses\n        course: state.currentCourse,\n        currentUser: state.currentUser\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setCourse: (courseObj)=> {\n            dispatch({type: \"SET_COURSE\", payload: courseObj})\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CoursePageContainer)"]},"metadata":{},"sourceType":"module"}