{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst defaultState = {\n  currentUser: {},\n  // currentUserCourses: [],\n  subjects: [],\n  allCourses: [],\n  currentCourse: {},\n  currentAssignment: {}\n};\n\nfunction reducer(state = defaultState, action) {\n  switch (action.type) {\n    case \"SET_USER\":\n      return _objectSpread({}, state, {\n        currentUser: action.payload\n      });\n\n    case \"ADD_COURSE\":\n      // return {...state, currentUserCourses: [...state.currentUserCourses, action.payload]}\n      return _objectSpread({}, state, {\n        currentUser: _objectSpread({}, state.currentUser, {\n          courses: [...state.currentUser.courses, action.payload]\n        })\n      });\n\n    case \"REMOVE_COURSE\":\n      const courseRemoved = state.currentUser.courses.filter(course => {\n        return course.id !== action.payload;\n      }); // console.log(courseRemoved)\n\n      return _objectSpread({}, state, {\n        currentUser: _objectSpread({}, state.currentUser, {\n          courses: courseRemoved\n        }) // const courseRemoved = state.currentUserCourses.filter(course => {\n        //     return course.id !== action.payload\n        // })\n        // return {...state, currentUserCourses: courseRemoved}\n\n      });\n\n    case \"SET_SUBJECTS\":\n      return _objectSpread({}, state, {\n        subjects: action.payload\n      });\n\n    case \"SET_ALL_COURSES\":\n      // debugger\n      return _objectSpread({}, state, {\n        allCourses: action.payload\n      });\n\n    case \"SET_ASSIGNMENT\":\n      // return {...state, currentUserCourses: [...state.currentUserCourses, action.payload]}\n      return _objectSpread({}, state, {\n        currentAssignment: action.payload\n      });\n\n    case \"UPDATE_SUBMISSION_IN_CURRENT_ASSIGNMENT\":\n      const updateSubmissions = state.currentAssignment.submissions.map(submission => {\n        // debugger\n        if (submission.id === action.payload.id) {\n          submission = action.payload;\n          return submission;\n        } else {\n          return submission;\n        }\n      }); // debugger\n\n      return _objectSpread({}, state, {\n        currentAssignment: _objectSpread({}, state.currentAssignment, {\n          submissions: updateSubmissions\n        })\n      });\n\n    case \"ADD_COURSE_TO_ALL_COURSES\":\n      return _objectSpread({}, state, {\n        allCourses: [...state.allCourses, action.payload]\n      });\n\n    case \"REMOVE_COURSE_FROM_ALL_COURSES\":\n      const courseRemovedAll = state.allCourses.filter(course => {\n        return course.id !== action.payload;\n      }); // debugger\n\n      return _objectSpread({}, state, {\n        allCourses: courseRemovedAll\n      });\n\n    case \"ADD_ASSIGNMENT_TO_COURSE\":\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          assignments: [...state.currentCourse.assignments, action.payload]\n        })\n      });\n\n    case \"REMOVE_ASSIGNMENT_FROM_COURSE\":\n      const assignmentRemoved = state.currentCourse.assignments.filter(assignment => {\n        return assignment.id !== action.payload;\n      }); // console.log(assignmentRemoved)\n\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          assignments: assignmentRemoved\n        })\n      });\n\n    case \"ADD_PROBLEM_TO_ASSIGNMENT\":\n      // console.log(state.currentCourse)\n      // console.log(action.payload)\n      const matchAssignment = state.currentCourse.assignments.map(assignment => {\n        // debugger\n        if (assignment.id === action.payload.assignmentId) {\n          assignment.problems = [...assignment.problems, action.payload.question];\n          return assignment;\n        } else {\n          return assignment;\n        }\n      });\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          assignments: matchAssignment\n        })\n      });\n\n    case \"SET_COURSE\":\n      return _objectSpread({}, state, {\n        currentCourse: action.payload // case \"SUBMIT_ASSIGNMENT_TO_COURSE\":\n        //     // debugger\n        //     const submitted = state.currentCourse.assignments.map(assignment => {\n        //         if(assignment.id === action.payload.assignment.id){\n        //             assignment.submissions = [...assignment.submissions, action.payload]\n        //             return assignment\n        //         }\n        //         else{\n        //             return assignment\n        //         }\n        //     })\n        //     // debugger\n        //     return {...state, currentCourse : {...state.currentCourse, assignments: submitted}}\n\n      });\n\n    case \"ADD_ANNOUNCEMENT\":\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          announcements: [action.payload, ...state.currentCourse.announcements]\n        })\n      });\n\n    case \"EDIT_ANNOUNCEMENT\":\n      const updatedAnnouncements = state.currentCourse.announcements.map(announcement => {\n        if (announcement.id === action.payload.id) {\n          announcement.title = action.payload.title;\n          announcement.information = action.payload.information;\n          announcement.video_url = action.payload.video_url;\n          return announcement;\n        } else {\n          return announcement;\n        }\n      }); // debugger\n\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          announcements: updatedAnnouncements\n        })\n      });\n\n    case \"REMOVE_ANNOUNCEMENT\":\n      const announcementRemoved = state.currentCourse.announcements.filter(announcement => {\n        return announcement.id !== action.payload;\n      });\n      return _objectSpread({}, state, {\n        currentCourse: _objectSpread({}, state.currentCourse, {\n          announcements: announcementRemoved\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread({}, state, {\n        currentUser: {}\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\reducers\\reducer.js"],"names":["defaultState","currentUser","subjects","allCourses","currentCourse","currentAssignment","reducer","state","action","type","payload","courses","courseRemoved","filter","course","id","updateSubmissions","submissions","map","submission","courseRemovedAll","assignments","assignmentRemoved","assignment","matchAssignment","assignmentId","problems","question","announcements","updatedAnnouncements","announcement","title","information","video_url","announcementRemoved"],"mappings":"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","sourcesContent":["const defaultState = {\n    currentUser: {},\n    // currentUserCourses: [],\n    subjects: [],\n    allCourses: [],\n    currentCourse: {},\n    currentAssignment: {}\n}\n\nfunction reducer(state= defaultState, action){\n    switch(action.type){\n        case \"SET_USER\":\n            return {...state, currentUser: action.payload}\n        case \"ADD_COURSE\":\n            // return {...state, currentUserCourses: [...state.currentUserCourses, action.payload]}\n            return {...state, currentUser: {...state.currentUser, courses: [...state.currentUser.courses, action.payload]}}\n        case \"REMOVE_COURSE\":\n            const courseRemoved = state.currentUser.courses.filter(course => {\n                return course.id !== action.payload\n            })\n            // console.log(courseRemoved)\n            return {...state, currentUser: {...state.currentUser, courses: courseRemoved}}\n            // const courseRemoved = state.currentUserCourses.filter(course => {\n            //     return course.id !== action.payload\n            // })\n            // return {...state, currentUserCourses: courseRemoved}\n        case \"SET_SUBJECTS\":\n            return {...state, subjects: action.payload}\n        case \"SET_ALL_COURSES\":\n            // debugger\n            return {...state, allCourses: action.payload}\n        case \"SET_ASSIGNMENT\":\n            // return {...state, currentUserCourses: [...state.currentUserCourses, action.payload]}\n            return {...state, currentAssignment: action.payload}\n        case \"UPDATE_SUBMISSION_IN_CURRENT_ASSIGNMENT\":\n                const updateSubmissions = state.currentAssignment.submissions.map(submission => {\n                    // debugger\n                    if(submission.id === action.payload.id){\n                        \n                        submission = action.payload\n                        return submission\n                    }\n                    else {\n                        return submission\n                    }\n                })\n                // debugger\n                return {...state, currentAssignment: {...state.currentAssignment, submissions: updateSubmissions}}\n        case \"ADD_COURSE_TO_ALL_COURSES\":\n            return {...state, allCourses: [...state.allCourses, action.payload]}\n        case \"REMOVE_COURSE_FROM_ALL_COURSES\":\n            const courseRemovedAll = state.allCourses.filter(course => {\n                return course.id !== action.payload\n            })\n            // debugger\n            return {...state, allCourses: courseRemovedAll}\n        case \"ADD_ASSIGNMENT_TO_COURSE\":\n                return {...state, currentCourse : {...state.currentCourse, assignments: [...state.currentCourse.assignments, action.payload]}}\n        case \"REMOVE_ASSIGNMENT_FROM_COURSE\":\n                const assignmentRemoved = state.currentCourse.assignments.filter(assignment => {\n                    return assignment.id !== action.payload\n                })\n                // console.log(assignmentRemoved)\n            return {...state, currentCourse : {...state.currentCourse, assignments: assignmentRemoved}}\n        case \"ADD_PROBLEM_TO_ASSIGNMENT\":\n            // console.log(state.currentCourse)\n            // console.log(action.payload)\n            const matchAssignment = state.currentCourse.assignments.map(assignment => {\n                // debugger\n                if(assignment.id === action.payload.assignmentId){\n                    \n                    assignment.problems = [...assignment.problems, action.payload.question]\n                    return assignment\n                }\n                else{\n                    return assignment\n                }\n            })\n            return {...state, currentCourse : {...state.currentCourse, assignments: matchAssignment}}\n        case \"SET_COURSE\":\n            return {...state, currentCourse : action.payload}\n        // case \"SUBMIT_ASSIGNMENT_TO_COURSE\":\n        //     // debugger\n        //     const submitted = state.currentCourse.assignments.map(assignment => {\n        //         if(assignment.id === action.payload.assignment.id){\n        //             assignment.submissions = [...assignment.submissions, action.payload]\n        //             return assignment\n        //         }\n        //         else{\n        //             return assignment\n        //         }\n        //     })\n        //     // debugger\n        //     return {...state, currentCourse : {...state.currentCourse, assignments: submitted}}\n\n        case \"ADD_ANNOUNCEMENT\":\n            return {...state, currentCourse : {...state.currentCourse, announcements: [action.payload, ...state.currentCourse.announcements]}}\n        case \"EDIT_ANNOUNCEMENT\":\n            const updatedAnnouncements = state.currentCourse.announcements.map(announcement => {\n                if(announcement.id === action.payload.id){\n                    announcement.title = action.payload.title\n                    announcement.information = action.payload.information\n                    announcement.video_url = action.payload.video_url\n                    return announcement\n                }\n                else{\n                    return announcement\n                }\n                \n            })\n            // debugger\n            return {...state, currentCourse : {...state.currentCourse, announcements: updatedAnnouncements}}\n            \n        case \"REMOVE_ANNOUNCEMENT\":\n            const announcementRemoved = state.currentCourse.announcements.filter(announcement => {\n                return announcement.id !== action.payload\n            })\n            return {...state, currentCourse : {...state.currentCourse, announcements: announcementRemoved}}\n        case \"LOG_OUT\":\n            return {...state, currentUser: {}}\n        default: \n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}