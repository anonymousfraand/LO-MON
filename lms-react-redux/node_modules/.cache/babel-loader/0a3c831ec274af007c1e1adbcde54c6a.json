{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\RegisterCourseComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass RegisterCourseComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      selectedSubject: ''\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.format = courses => {\n      return this.filtration(courses);\n    };\n\n    this.filtration = courses => {\n      return courses.filter(course => {\n        // debugger\n        return course.name.toLowerCase().includes(this.state.searchTerm.toLowerCase());\n      });\n    };\n\n    this.handleSubjectClick = name => {\n      this.setState({\n        selectedSubject: name\n      });\n    };\n\n    this.handleRegisterClick = course_id => {\n      console.log(course_id); // console.log(this.state)\n\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/students/\".concat(this.props.url, \"/enrollments\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          enrollment: {\n            course_id: course_id,\n            student_id: this.props.currentUser.id\n          }\n        })\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        // console.log(data)\n        this.props.addUserCourse(data.course);\n        this.props.history.push('/courses');\n      });\n    };\n\n    this.foundMatchMethod = courseInput => {\n      //handles match for course registration. if match is found, changes text and className of Course\n      let foundMatch;\n\n      if (this.props.currentUser.courses !== undefined) {\n        foundMatch = this.props.currentUser.courses.find(course => {\n          return course.id === courseInput.id;\n        });\n      }\n\n      return foundMatch;\n    };\n\n    this.handleClassName = courseInput => {\n      if (this.foundMatchMethod(courseInput)) {\n        return \"ui red disabled button\";\n      } else {\n        return \"ui green button\";\n      }\n    };\n\n    this.handleText = courseInput => {\n      if (this.foundMatchMethod(courseInput)) {\n        return \"Already Registered\";\n      } else {\n        return \"Register\";\n      }\n    };\n  }\n\n  render() {\n    // console.log(this.props.currentUser.courses)\n    // console.log(this.props.allCourses)\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleOnChange,\n      name: \"searchTerm\",\n      type: \"text\",\n      placeholder: \"Search Course Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"search icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui compact menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui simple dropdown item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Sort By Subject\", React.createElement(\"i\", {\n      className: \"dropdown icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => this.handleSubjectClick(\"\"),\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"All Subjects\"), this.props.subjects.map(subject => {\n      return React.createElement(\"div\", {\n        key: subject.id,\n        onClick: () => this.handleSubjectClick(subject.name),\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, subject.name);\n    }))))), React.createElement(\"div\", {\n      className: \"ui three column grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.format(this.props.allCourses).map(course => {\n      if (course.subject.name.includes(this.state.selectedSubject)) {\n        //checks if subject matches sort\n        return React.createElement(\"div\", {\n          key: course.id,\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui segment course\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, course.name), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, course.subject.name), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Instructor: \".concat(course.teacher.first_name, \" \").concat(course.teacher.last_name)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: () => this.handleRegisterClick(course.id),\n          className: this.handleClassName(course),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, this.handleText(course))));\n      } else {\n        return null;\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    allCourses: state.allCourses,\n    subjects: state.subjects\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUserCourse: newCourse => {\n      dispatch({\n        type: \"ADD_COURSE\",\n        payload: newCourse\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterCourseComponent);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\RegisterCourseComponent.js"],"names":["React","Component","connect","RegisterCourseComponent","state","searchTerm","selectedSubject","handleOnChange","e","setState","target","name","value","format","courses","filtration","filter","course","toLowerCase","includes","handleSubjectClick","handleRegisterClick","course_id","console","log","token","localStorage","getItem","fetch","props","url","method","headers","body","JSON","stringify","enrollment","student_id","currentUser","id","then","resp","json","data","addUserCourse","history","push","foundMatchMethod","courseInput","foundMatch","undefined","find","handleClassName","handleText","render","marginBottom","display","justifyContent","subjects","map","subject","allCourses","teacher","first_name","last_name","mapStateToProps","mapDispatchToProps","dispatch","newCourse","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass RegisterCourseComponent extends Component {\n    state = {\n        searchTerm: '',\n        selectedSubject: ''\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    format = (courses) => {\n        return this.filtration(courses)\n    }\n\n    filtration = (courses) => {\n        return courses.filter(course => {\n            // debugger\n            return course.name.toLowerCase().includes(this.state.searchTerm.toLowerCase())\n        })\n    }\n\n    handleSubjectClick = (name) => {\n        this.setState({\n            selectedSubject: name\n        })\n    }\n\n    handleRegisterClick = (course_id) => {\n        console.log(course_id)\n        // console.log(this.state)\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/students/${this.props.url}/enrollments`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                enrollment: {\n                    course_id: course_id,\n                    student_id: this.props.currentUser.id\n                }\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n            // console.log(data)\n            this.props.addUserCourse(data.course)\n            this.props.history.push('/courses')\n        })\n    }\n    foundMatchMethod = (courseInput) => {\n        //handles match for course registration. if match is found, changes text and className of Course\n        let foundMatch;\n        if(this.props.currentUser.courses !== undefined){\n            foundMatch = this.props.currentUser.courses.find(course => {\n                return course.id === courseInput.id\n            })\n        }\n        return foundMatch\n    }\n    handleClassName = (courseInput) => {\n        \n        if(this.foundMatchMethod(courseInput)){\n            return \"ui red disabled button\"\n        }\n        else{\n            return \"ui green button\"\n        }\n    }\n    handleText = (courseInput) => {\n        if(this.foundMatchMethod(courseInput)){\n            return \"Already Registered\"\n        }\n        else{\n            return \"Register\"\n        }\n    }\n    render() {\n        // console.log(this.props.currentUser.courses)\n        // console.log(this.props.allCourses)\n        \n        return (\n        <div className=\"ui container\">\n                <br></br>\n                <div style={{marginBottom: \"20px\", display: \"flex\", justifyContent:\"center\", justifyContent:\"space-between\"}}>\n                <div className=\"ui icon input\">\n                    <input onChange={this.handleOnChange} name=\"searchTerm\" type=\"text\" placeholder=\"Search Course Name\"/>\n                    <i className=\"search icon\"></i>\n                </div>\n\n                <div className=\"ui compact menu\">\n                    <div className=\"ui simple dropdown item\">\n                        Sort By Subject\n                        <i className=\"dropdown icon\"></i>\n                        <div className=\"menu\">\n                        <div onClick={() => this.handleSubjectClick(\"\")} className=\"item\">All Subjects</div>\n                        {this.props.subjects.map(subject => {\n                            return <div key={subject.id} onClick={() => this.handleSubjectClick(subject.name)} className=\"item\">{subject.name}</div>\n                        })}\n                        </div>\n                    </div>\n                </div>\n                </div>\n                \n                <div className=\"ui three column grid\">\n                    {this.format(this.props.allCourses).map(course => {\n                    if(course.subject.name.includes(this.state.selectedSubject)){ //checks if subject matches sort\n                        return <div key={course.id} className=\"column\">\n                            <div className=\"ui segment course\">\n                                <h1>{course.name}</h1>\n                                <h3>{course.subject.name}</h3>\n                                <h4>{`Instructor: ${course.teacher.first_name} ${course.teacher.last_name}`}</h4>\n                                <br></br>\n                        \n                                <button onClick={() => this.handleRegisterClick(course.id)} className={this.handleClassName(course)}>{this.handleText(course)}</button>\n                                \n                            </div>\n                        </div>\n                    }\n                    else {\n                        return null\n                    }   \n                    })}\n                </div>        \n        </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentUser: state.currentUser,\n        allCourses: state.allCourses,\n        subjects: state.subjects,\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addUserCourse: (newCourse) => {\n            dispatch({type:\"ADD_COURSE\", payload: newCourse})\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterCourseComponent)\n"]},"metadata":{},"sourceType":"module"}