{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingswin\\\\Downloads\\\\learning-management-system-project-master\\\\learning-management-system-project-master\\\\lms-react-redux\\\\src\\\\AnnouncementCard.js\";\n// import React from 'react'\nimport { connect } from 'react-redux';\nimport React, { Component, Fragment } from 'react';\nimport { Confirm } from \"semantic-ui-react\";\nimport Moment from 'react-moment';\n\nclass AnnouncementCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showComments: false,\n      allComments: [],\n      comment: '',\n      open: false,\n      openComment: false\n    };\n\n    this.show = () => this.setState({\n      open: true\n    });\n\n    this.handleConfirm = id => {\n      this.handleOnClick(id);\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      open: false\n    });\n\n    this.showComment = () => this.setState({\n      openComment: true\n    });\n\n    this.handleCommentConfirm = id => {\n      this.handleCommentDelete(id);\n      this.setState({\n        openComment: false\n      });\n    };\n\n    this.handleCommentCancel = () => this.setState({\n      openComment: false\n    });\n\n    this.handleOnClick = id => {\n      // console.log(id)\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/announcements/\").concat(id), {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data) //returns json message of delete success\n        this.props.removeAnnouncement(id);\n      });\n    };\n\n    this.containsEmbed = url => {\n      let splitString = url.split(\"/\");\n\n      if (splitString.includes('embed')) {\n        return true;\n      }\n    };\n\n    this.embedIt = videoId => {\n      let splitString = videoId.split(\"=\"); // console.log(splitString[1])\n\n      return \"https://www.youtube.com/embed/\".concat(splitString[1]);\n    };\n\n    this.handleCommentChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleCommentDelete = commentId => {\n      // let deletedComment = this.state.allComments.filter(comment => {\n      //     return comment.id !== commentId\n      // })\n      // this.setState({\n      //     allComments: deletedComment\n      // })\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/announcements/\").concat(this.props.announcement.id, \"/comments/\").concat(commentId), {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(resp => resp.json()).then(data => {\n        let deletedComment = this.state.allComments.filter(comment => {\n          return comment.id !== commentId;\n        });\n        this.setState({\n          allComments: deletedComment\n        });\n      });\n    };\n\n    this.handleCommentSubmit = e => {\n      e.preventDefault();\n      const token = localStorage.getItem(\"token\");\n      fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/announcements/\").concat(this.props.announcement.id, \"/comments\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: JSON.stringify({\n          comment: {\n            content: this.state.comment,\n            announcement_id: this.props.announcement.id,\n            commentable: {\n              position: this.props.currentUser.position,\n              id: this.props.currentUser.id\n            }\n          }\n        })\n      }).then(resp => resp.json()).then(data => {\n        // console.log(data)\n        this.setState({\n          allComments: [...this.state.allComments, data]\n        });\n      });\n      e.target.reset();\n    };\n\n    this.handleViewCommentsClick = id => {\n      //only makes a fetch when viewComment is opened\n      if (this.state.showComments) {\n        this.setState({\n          showComments: false,\n          allComments: []\n        });\n      } else {\n        // console.log(id)\n        // console.log(this.props.url)\n        // console.log(token)\n        const token = localStorage.getItem(\"token\"); // debugger\n\n        fetch(\"https://lms-api-rails.herokuapp.com/api/v1/courses/\".concat(this.props.url, \"/announcements/\").concat(id, \"/comments\"), {\n          headers: {\n            \"Authorization\": \"Bearer \".concat(token)\n          }\n        }).then(resp => resp.json()).then(data => {\n          // debugger\n          //return ALL comments. filters which comments belong to the specific announcement clicked\n          let specificAnnouncementComments = data.filter(comment => {\n            return comment.announcement.id === id;\n          });\n          this.setState({\n            showComments: true,\n            allComments: specificAnnouncementComments\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    // console.log(token)\n    // debugger\n    const _this$props$announcem = this.props.announcement,\n          id = _this$props$announcem.id,\n          title = _this$props$announcem.title,\n          information = _this$props$announcem.information,\n          video_url = _this$props$announcem.video_url,\n          created_at = _this$props$announcem.created_at;\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, information), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Posted on: \", React.createElement(Moment, {\n      format: \"MM/DD/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, created_at), \" \"), video_url ? React.createElement(\"iframe\", {\n      width: \"500\",\n      height: \"300\",\n      src: this.embedIt(video_url),\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, //checks if currentUser is defined and also if the user is a teacher\n    Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-tooltip\": \"Delete Announcement\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: this.show,\n      className: \"trash red big alternate outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Confirm, {\n      open: this.state.open,\n      header: \"Deleting this Announcement.\",\n      onCancel: this.handleCancel,\n      onConfirm: () => this.handleConfirm(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      \"data-tooltip\": \"Edit Announcement\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.props.handleEditClick(id),\n      className: \"edit violet big outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      \"data-tooltip\": \"View Comments\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.handleViewCommentsClick(id),\n      className: \"eye orange big icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))) : React.createElement(\"span\", {\n      \"data-tooltip\": \"View Comments\",\n      \"data-position\": \"top left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.handleViewCommentsClick(id),\n      className: \"eye big icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), this.state.showComments ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleCommentSubmit,\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      required: true,\n      name: \"comment\",\n      placeholder: \"Share your comments or thoughts! Keep it friendly!\",\n      onChange: this.handleCommentChange,\n      rows: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui blue button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Comment\")), this.state.allComments.length !== 0 ? this.state.allComments.map(comment => {\n      return React.createElement(\"div\", {\n        key: comment.id,\n        className: \"ui comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ui mini image\",\n        src: comment.commentable.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, comment.content), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"By: \", comment.commentable.username, \" | \", comment.commentable.position)), comment.commentable.id === this.props.currentUser.id ? React.createElement(\"span\", {\n        \"data-tooltip\": \"Remove Comment\",\n        \"data-position\": \"top left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        onClick: () => this.showComment(),\n        className: \"hand big scissors icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(Confirm, {\n        open: this.state.openComment,\n        header: \"Removing this Comment.\",\n        onCancel: () => this.handleCommentCancel(),\n        onConfirm: () => this.handleCommentConfirm(comment.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })) : // <div className=\"ui segment\">\n      // <div className=\"ui active inverted dimmer\">\n      //     <div className=\"ui small text loader\">Loading</div>\n      // </div>\n      // </div>\n      null));\n    }) : React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"No Comments...yet\"))) : null));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeAnnouncement: announcementId => {\n      dispatch({\n        type: \"REMOVE_ANNOUNCEMENT\",\n        payload: announcementId\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnouncementCard);","map":{"version":3,"sources":["C:\\Users\\kingswin\\Downloads\\learning-management-system-project-master\\learning-management-system-project-master\\lms-react-redux\\src\\AnnouncementCard.js"],"names":["connect","React","Component","Fragment","Confirm","Moment","AnnouncementCard","state","showComments","allComments","comment","open","openComment","show","setState","handleConfirm","id","handleOnClick","handleCancel","showComment","handleCommentConfirm","handleCommentDelete","handleCommentCancel","token","localStorage","getItem","fetch","props","url","method","headers","then","resp","json","data","removeAnnouncement","containsEmbed","splitString","split","includes","embedIt","videoId","handleCommentChange","e","target","name","value","commentId","announcement","deletedComment","filter","handleCommentSubmit","preventDefault","body","JSON","stringify","content","announcement_id","commentable","position","currentUser","reset","handleViewCommentsClick","specificAnnouncementComments","render","title","information","video_url","created_at","Object","keys","length","handleEditClick","map","image_url","username","mapStateToProps","mapDispatchToProps","dispatch","announcementId","type","payload"],"mappings":"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","sourcesContent":["// import React from 'react'\nimport {connect} from 'react-redux'\nimport React, { Component, Fragment } from 'react'\nimport {Confirm} from \"semantic-ui-react\"\nimport Moment from 'react-moment'\n\n\n\nclass AnnouncementCard extends Component {\n\n    state={\n        showComments: false,\n        allComments: [],\n        comment: '',\n        open: false,\n        openComment: false\n    }\n\n    show = () => this.setState({ open: true })\n    handleConfirm = (id) => {\n        this.handleOnClick(id)\n        this.setState({ \n            open: false \n        })\n    }\n    handleCancel = () => this.setState({ open: false })\n\n    showComment = () => this.setState({ openComment: true })\n    handleCommentConfirm = (id) => {\n        this.handleCommentDelete(id)\n        this.setState({ \n            openComment: false \n        })\n    }\n    handleCommentCancel = () => this.setState({ openComment: false })\n\n    handleOnClick = (id) =>{\n        // console.log(id)\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/announcements/${id}`,{\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n           }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data) //returns json message of delete success\n            this.props.removeAnnouncement(id);\n        })\n    }\n\n    containsEmbed = (url) => {\n        let splitString = url.split(\"/\")\n        if(splitString.includes('embed')){\n            return true\n        }\n\n    }\n    embedIt = (videoId) => {\n        let splitString = videoId.split(\"=\")\n        // console.log(splitString[1])\n        return `https://www.youtube.com/embed/${splitString[1]}`\n    }\n\n    handleCommentChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleCommentDelete = (commentId) => {\n        // let deletedComment = this.state.allComments.filter(comment => {\n        //     return comment.id !== commentId\n        // })\n        // this.setState({\n        //     allComments: deletedComment\n        // })\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/announcements/${this.props.announcement.id}/comments/${commentId}`,{\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            let deletedComment = this.state.allComments.filter(comment => {\n                return comment.id !== commentId\n            })\n            this.setState({\n                allComments: deletedComment\n            })\n        })\n    }\n\n    handleCommentSubmit = (e) => {\n        e.preventDefault()\n        const token = localStorage.getItem(\"token\")\n        fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/announcements/${this.props.announcement.id}/comments`,{\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    comment: {\n                        content: this.state.comment,\n                        announcement_id: this.props.announcement.id,\n                        commentable: {\n                            position: this.props.currentUser.position,\n                            id: this.props.currentUser.id\n\n                    }\n                }})\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                // console.log(data)\n                this.setState({\n                    allComments: [...this.state.allComments, data]\n                })\n            })\n            e.target.reset()\n    }\n\n    handleViewCommentsClick = (id) => {\n        //only makes a fetch when viewComment is opened\n        if(this.state.showComments){\n            this.setState({\n                showComments: false,\n                allComments: []\n            })\n        }\n        else{\n            // console.log(id)\n            // console.log(this.props.url)\n            // console.log(token)\n            const token = localStorage.getItem(\"token\")\n            // debugger\n            fetch(`https://lms-api-rails.herokuapp.com/api/v1/courses/${this.props.url}/announcements/${id}/comments`, {\n                headers: {\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                // debugger\n                \n                //return ALL comments. filters which comments belong to the specific announcement clicked\n                let specificAnnouncementComments = data.filter(comment => {\n                    return comment.announcement.id === id \n                })\n                this.setState({\n                    showComments: true,\n                    allComments: specificAnnouncementComments\n                })\n            })\n        }\n        \n    }\n\n    render() {\n        // console.log(token)\n        // debugger\n        const {id, title, information, video_url,created_at} = this.props.announcement\n        return (\n        <div className=\"ui segment\">\n            <h1>{title}</h1>\n            <p>{information}</p>\n            <p>Posted on: <Moment format=\"MM/DD/YYYY\">{created_at}</Moment> </p>\n            \n            {\n                video_url ?\n                <iframe width=\"500\" height=\"300\" src={this.embedIt(video_url)} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                :\n                null\n            }\n           \n            <div>\n            {\n                //checks if currentUser is defined and also if the user is a teacher\n                Object.keys(this.props.currentUser).length !== 0 && this.props.currentUser.position === \"teacher\" ? \n                <Fragment>\n                    <span data-tooltip=\"Delete Announcement\" data-position=\"top left\">\n                        <i onClick={this.show} className=\"trash red big alternate outline icon\"></i>\n                        <Confirm\n                                open={this.state.open}\n                                header='Deleting this Announcement.'\n                                onCancel={this.handleCancel}\n                                onConfirm={() => this.handleConfirm(id)}\n                                />\n                    </span>\n                    <span data-tooltip=\"Edit Announcement\" data-position=\"top left\">\n                        <i onClick={()=> this.props.handleEditClick(id)} className=\"edit violet big outline icon\"></i>\n                    </span>\n\n                    <span data-tooltip=\"View Comments\" data-position=\"top left\">\n                        <i onClick={() => this.handleViewCommentsClick(id)} className=\"eye orange big icon\"></i>\n                    </span>\n                    \n                    \n                </Fragment>   \n                :\n                <span data-tooltip=\"View Comments\" data-position=\"top left\">\n                        <i onClick={() => this.handleViewCommentsClick(id)} className=\"eye big icon\"></i>\n                </span>\n            }\n            {\n                this.state.showComments ?\n\n                <Fragment>\n                    <form onSubmit={this.handleCommentSubmit} className=\"ui form\">\n                        <div className=\"field\">\n                            <br></br>\n                            {/* <label>Post Comment</label> */}\n                            <textarea required name=\"comment\" placeholder=\"Share your comments or thoughts! Keep it friendly!\" onChange={this.handleCommentChange} rows=\"2\"></textarea>\n                        </div>\n                        <button className=\"ui blue button\" type=\"submit\" value=\"Submit\">Comment</button>\n                    </form>\n                    {   \n                        this.state.allComments.length !== 0?\n                        this.state.allComments.map(comment =>{\n                            return <div key={comment.id} className=\"ui comments\">\n                                {/* <div className=\"avatar\">\n                                    <img className=\"ui mini image\" src={comment.commentable.image_url}></img>\n                                </div>\n                                <h4>{comment.content}</h4> */}\n                            \n                                <div className=\"comment\">\n \n                                <div className=\"avatar\">\n                                    <img className=\"ui mini image\" src={comment.commentable.image_url}/>\n                                </div>\n                                <p>{comment.content}</p>\n                                <div className=\"content\">\n                                    <div className=\"author\">\n                                    By: {comment.commentable.username} | {comment.commentable.position}\n                                    </div>\n                                </div>\n                               \n                                {/* <p>By: {comment.commentable.username} | {comment.commentable.position}</p> */}\n                                {\n                                    comment.commentable.id === this.props.currentUser.id ?\n                                    <span data-tooltip=\"Remove Comment\" data-position=\"top left\">\n                                        <i onClick={()=> this.showComment()} className=\"hand big scissors icon\"></i>\n                                        <Confirm\n                                            open={this.state.openComment}\n                                            header='Removing this Comment.'\n                                            onCancel={() => this.handleCommentCancel()}\n                                            onConfirm={() => this.handleCommentConfirm(comment.id)}\n                                            />\n                                    </span>\n                                    :\n                                    // <div className=\"ui segment\">\n                                    // <div className=\"ui active inverted dimmer\">\n                                    //     <div className=\"ui small text loader\">Loading</div>\n                                    // </div>\n                                    // </div>\n                                    null\n                                }\n                                </div>\n                            </div>\n                        })\n                        :\n                        <div className=\"ui segment\">\n                            <h2>No Comments...yet</h2>\n                        </div>\n                        \n                    }\n                </Fragment>\n                \n                :\n                null\n            }\n            </div>\n        </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        removeAnnouncement: (announcementId)=> {\n            dispatch({type: \"REMOVE_ANNOUNCEMENT\", payload: announcementId})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnouncementCard)"]},"metadata":{},"sourceType":"module"}